#### 证书 ####
# 基于jdk生成证书的命名如下：
# keytool -genkey -alias geelato-web -dname "CN=Geelato,OU=Geelato,O=Geelato,L=GuangZhou,ST=GuangDong,C=CN" -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 365

#https端口号. 一般为443
server.port: 8080
#证书的路径.
server.ssl.key-store: classpath:keystore.p12
#证书密码，请修改为您自己证书的密码.
server.ssl.key-store-password: vgy78uhb
#秘钥库类型
server.ssl.keyStoreType: PKCS12
#证书别名
server.ssl.keyAlias: geelato-web


#### DB ####
spring.datasource.primary.name=prod
spring.datasource.primary.jdbc-url=jdbc:mysql://134.175.84.44:5050/geelato?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
spring.datasource.primary.url=jdbc:mysql://134.175.84.44:5050/geelato?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
spring.datasource.primary.username=geelato_user
spring.datasource.primary.password=pass@Word1
spring.datasource.primary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.primary.validationQuery=select 1 from dual
#spring.datasource.secondary.name=prod
#spring.datasource.secondary.url=jdbc:mysql://localhost/geelato?useUnicode=true&characterEncoding=utf-8&autoreconnect=true&useSSL=false&allowMultiQueries=true
#spring.datasource.secondary.username=root
#spring.datasource.secondary.password=123456
#spring.datasource.secondary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

#### LOG ####
logging.level.root=WARN
logging.level.org.geelato=INFO
logging.level.org.apache.shiro=INFO
logging.level.org.springframework.jdbc.core=INFO
logging.file.name=log/log.log
logging.logback.rollingpolicy.max-file-size=1048576
logging.logback.rollingpolicy.max-history=10
# logging.exception-conversion-word
logging.pattern.console=[%-5level]%d{ss.SSS} %logger{36} %L- %m%n
# logging.pattern.file=%d{mm:ss.SSS} %-5level %logger{70} - %msg%n
# logging.pattern.level=DEBUG

#### geelato专用配置 ####
# geelato.env=dev
# 元数据扫描，包名用逗号分隔，默认为org.geelato
geelato.meta.scan-package-names=org.geelato
# 系统初化执行的sql脚本,默认geelato/result/init.sql,从个脚本用“，”分开
geelato.init.sql=geelato/web/platform/data/init.sql
# 若在WIN系统运行本应用，且配置了CMD命令，则在应用启动后执行
# chrome 49以上的版本，支持跨域，需增加设置--user-result-dir=chrome,否则登录的后检查是否登录时拿不到cookie，具体路径可以自己定
geelato.exec.cmd.after.started=start chrome --args --disable-web-security --user-result-dir=chrome http://localhost:8080
geelato.meta.field.description=description
geelato.file.root.path=C:\\geelato\\files

#### 集成阿里宜搭 ####
app.systemToken=xxxxx
app.appKey=xxxxx
app.appSecret=xxxxx
app.adminId=xxxxx

